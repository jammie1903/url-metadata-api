@using React.AspNet
@model object

@{
  ViewBag.Title = "Url Metadata API";
  ViewBag.Description = "The API for All Your Url Metadata Needs";
  Layout = "_Layout";
}

<div class="hero-banner">
  <div class="section max-width">
    <i class="site-icon icon hero-banner-image"></i>
    <div class="text">
      <h2>
        <i class="site-icon icon hero-banner-image"></i>
        <span>@ViewBag.Description</span>
      </h2>
      <p>
        Ever needed to display some information about a url but didn't know how to get hold of it? This API is your answer.
        <br />
        <br />
        This api scans a given url to find the metadata stored in the pages header, and returns it to you as JSON.
      </p>
    </div>
  </div>
</div>

<div class="section max-width align-center">
  <a class="button" href="/demo">View Demo</a>
  <a class="button" href="/apidoc">View Docs</a>
</div>
<div class="section max-width">
  <h3>Want to try it yourself?</h3>

  The url is <pre>@(Context.Request.Scheme + "://" + Context.Request.Host)/api/metadata?url={put the url here!}</pre>

  <h4>Parameters</h4>
  
  <table class="wrap-table">
    <tr>
      <td><strong>url (mandatory):</strong></td>
      <td>The url you wish to lookup</td>
    </tr>
    <tr>
      <td><strong>preference:</strong></td>
      <td>
        Which type of metadata should be treated as priority, either
        <a target="_blank" rel="noopener" href="http://ogp.me/">OpenGraph</a> (the default),
        <a target="_blank" rel="noopener" href="https://developer.twitter.com/en/docs/tweets/optimize-with-cards/guides/getting-started.html">Twitter</a>, or generic.
      </td>
    </tr>
    <tr>
    <tr>
      <td><strong>timeout:</strong></td>
      <td>How long the api should wait for a response from the given url. Defaults to 2000 milliseconds, with an allowed range of 100 to 3000 milliseconds.</td>
    </tr>
  </table>
</div>
